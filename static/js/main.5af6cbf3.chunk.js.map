{"version":3,"sources":["Components/Header/Header.js","Components/TodoList/TodoList.js","Components/TodoItems/TodoItems.js","Components/FilterLink/FilterLink.js","Components/Footer/LinksData.js","Components/Footer/Footer.js","Components/TodoApp/TodoApp.js","api/todos.js","App.js","index.js"],"names":["Header","state","value","onChangeValue","event","target","setState","onSubmitTodo","preventDefault","onAddTodo","props","id","uuidv4","title","completed","this","className","onSubmit","placeholder","onChange","Component","TodoList","todosList","onChangeCompleted","onDeleteTodo","map","todo","key","type","checked","htmlFor","onClick","TodoItems","onDoneAllTodo","FilterLink","link","url","currentUrl","isActiveLink","href","linksData","Footer","links","getAttribute","onChangeUrlPath","todoCount","onClearCompletedTodo","TodoApp","urlPath","prevState","filter","activeTodoQuantity","length","renderedList","todos","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5af6cbf3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class Header extends Component {\n  state = {\n    value: '',\n  }\n\n  onChangeValue = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      value,\n    });\n  }\n\n  onSubmitTodo = (event) => {\n    event.preventDefault();\n    const { value } = this.state;\n\n    if (!value) {\n      return;\n    }\n\n    const { onAddTodo } = this.props;\n\n    const todo = {\n      id: uuidv4(),\n      title: value,\n      completed: false,\n    };\n\n    onAddTodo(todo);\n\n    this.setState({\n      value: '',\n    });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.onSubmitTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={value}\n            onChange={this.onChangeValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onAddTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends Component {\n  state = {}\n\n  render() {\n    const {\n      todosList,\n      onChangeCompleted,\n      onDeleteTodo,\n    } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {todosList.map(todo => (\n          <li\n            key={todo.id}\n            className={todo.completed ? 'completed' : ''}\n          >\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id=\"todo-1\"\n                value={todo.id}\n                checked={todo.completed}\n                onChange={onChangeCompleted}\n              />\n              <label htmlFor=\"todo-1\">{todo.title}</label>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => onDeleteTodo(todo.id)}\n              />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  onChangeCompleted: PropTypes.func.isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from '../TodoList/TodoList';\n\nexport class TodoItems extends Component {\n  state = {}\n\n  render() {\n    const {\n      todosList,\n      onChangeCompleted,\n      onDeleteTodo,\n      onDoneAllTodo,\n    } = this.props;\n\n    return (\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onClick={onDoneAllTodo}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n        >\n          Mark all as complete\n        </label>\n\n        <TodoList\n          todosList={todosList}\n          onChangeCompleted={onChangeCompleted}\n          onDeleteTodo={onDeleteTodo}\n        />\n\n      </section>\n    );\n  }\n}\n\nTodoItems.propTypes = {\n  onChangeCompleted: PropTypes.func.isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onDoneAllTodo: PropTypes.func.isRequired,\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FilterLink = (props) => {\n  const {\n    url,\n    value,\n  } = props.link;\n  const {\n    currentUrl,\n    isActiveLink,\n  } = props;\n\n  return (\n    <li>\n      <a\n        href={url}\n        className={currentUrl === url ? 'selected' : ''}\n        onClick={isActiveLink}\n      >\n        {value}\n      </a>\n    </li>\n  );\n};\n\nFilterLink.propTypes = {\n  link: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n  currentUrl: PropTypes.string.isRequired,\n  isActiveLink: PropTypes.func.isRequired,\n};\n","export const linksData = [{\n  url: '#/',\n  value: 'All',\n},\n{\n  url: '#/active',\n  value: 'Active',\n},\n{\n  url: '#/completed',\n  value: 'Completed',\n},\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterLink } from '../FilterLink/FilterLink';\nimport { linksData } from './LinksData';\n\nexport class Footer extends Component {\n  state = {\n    currentUrl: '#/',\n    links: linksData,\n  }\n\n  isActiveLink = (event) => {\n    const href = event.target.getAttribute('href');\n\n    this.props.onChangeUrlPath(href);\n    this.setState({\n      currentUrl: href,\n    });\n  }\n\n  render() {\n    const {\n      todoCount,\n      onClearCompletedTodo,\n    } = this.props;\n    const {\n      links,\n      currentUrl,\n    } = this.state;\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${todoCount} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          {links.map(link => (\n            <FilterLink\n              key={link.url}\n              link={link}\n              currentUrl={currentUrl}\n              isActiveLink={this.isActiveLink}\n            />\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={onClearCompletedTodo}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  todoCount: PropTypes.number.isRequired,\n  onClearCompletedTodo: PropTypes.func.isRequired,\n  onChangeUrlPath: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from '../Header/Header';\nimport { TodoItems } from '../TodoItems/TodoItems';\nimport { Footer } from '../Footer/Footer';\n\nexport class TodoApp extends Component {\n  state = {\n    todosList: this.props.todosList,\n    urlPath: '#/',\n  }\n\n  onAddTodo = (todo) => {\n    this.setState(prevState => ({\n      todosList: [...prevState.todosList, todo],\n    }));\n  }\n\n  onDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.filter(todo => todo.id !== id),\n    }));\n  }\n\n  onClearCompletedTodo = () => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.filter(todo => !todo.completed),\n    }));\n  }\n\n  onChangeUrlPath = (href) => {\n    this.setState({\n      urlPath: href,\n    });\n  }\n\n  onChangeCompleted = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map((todo) => {\n        if (todo.id === value) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  onDoneAllTodo = () => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map(todo => ({\n        ...todo,\n        completed: true,\n      })),\n    }));\n  }\n\n  render() {\n    const {\n      todosList,\n      urlPath,\n    } = this.state;\n\n    const {\n      onAddTodo,\n      onChangeCompleted,\n      onDeleteTodo,\n      onClearCompletedTodo,\n      onChangeUrlPath,\n      onDoneAllTodo,\n    } = this;\n\n    const activeTodoQuantity = todosList.filter(todo => !todo.completed).length;\n\n    let renderedList = todosList;\n\n    if (urlPath === '#/active') {\n      renderedList = todosList.filter(todo => !todo.completed);\n    } else if (urlPath === '#/completed') {\n      renderedList = todosList.filter(todo => todo.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          onAddTodo={onAddTodo}\n        />\n\n        <TodoItems\n          todosList={renderedList}\n          onChangeCompleted={onChangeCompleted}\n          onDeleteTodo={onDeleteTodo}\n          onDoneAllTodo={onDoneAllTodo}\n        />\n\n        <Footer\n          todoCount={activeTodoQuantity}\n          onClearCompletedTodo={onClearCompletedTodo}\n          onChangeUrlPath={onChangeUrlPath}\n        />\n      </section>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const todos = [\n  {\n    id: uuidv4(),\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n];\n","import React from 'react';\nimport { TodoApp } from './Components/TodoApp/TodoApp';\nimport { todos } from './api/todos';\n\nexport const App = () => (\n  <TodoApp todosList={todos} />\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}