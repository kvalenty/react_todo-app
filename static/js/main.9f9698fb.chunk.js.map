{"version":3,"sources":["Components/Header/Header.js","Components/Todo/Todo.js","Shapes/Shapes.js","Components/TodoList/TodoList.js","Components/TodoItems/TodoItems.js","Components/FilterLink/FilterLink.js","Components/Footer/LinksData.js","Components/Footer/Footer.js","Components/TodoApp/TodoApp.js","api/todos.js","App.js","index.js"],"names":["Header","state","value","onChangeValue","event","target","replace","setState","onSubmitTodo","preventDefault","onAddTodo","props","id","uuidv4","title","completed","this","className","onSubmit","placeholder","onChange","Component","Todo","PropTypes","shape","string","isRequired","bool","todo","isEdit","onEdit","onChangeTodo","onBlur","updateTodos","handleKeyPress","key","onChangeUpdate","onChangeCompleted","onDeleteTodo","classnames","editing","type","checked","htmlFor","onDoubleClick","onClick","ref","input","focus","onKeyUp","TodoList","todosList","map","TodoItems","onDoneAllTodo","FilterLink","link","url","currentUrl","isActiveLink","href","selected","linksData","Footer","links","getAttribute","onChangeUrlPath","todoCount","onClearCompletedTodo","TodoApp","urlPath","prevState","filter","activeTodoQuantity","length","renderedList","todos","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f9698fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class Header extends Component {\n  state = {\n    value: '',\n  }\n\n  onChangeValue = (event) => {\n    let { value } = event.target;\n\n    value = value.replace(/\\s+/g, ' ').replace(/^\\s+$/, '');\n\n    this.setState({\n      value,\n    });\n  }\n\n  onSubmitTodo = (event) => {\n    event.preventDefault();\n    const { value } = this.state;\n\n    if (!value) {\n      return;\n    }\n\n    const { onAddTodo } = this.props;\n\n    const todo = {\n      id: uuidv4(),\n      title: value,\n      completed: false,\n    };\n\n    onAddTodo(todo);\n\n    this.setState({\n      value: '',\n    });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.onSubmitTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={value}\n            onChange={this.onChangeValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onAddTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { ShapeTodo } from '../../Shapes/Shapes';\n\nexport class Todo extends Component {\n  state = {\n    value: this.props.todo.title,\n    isEdit: false,\n  }\n\n  onEdit = () => {\n    this.setState({\n      isEdit: true,\n    });\n  }\n\n  onChangeTodo = (event) => {\n    let { value } = event.target;\n\n    value = value.replace(/\\s+/g, ' ').replace(/^\\s+$/, '');\n\n    this.setState({\n      value,\n    });\n  }\n\n  onBlur = (event) => {\n    const { value, id } = event.target;\n\n    this.updateTodos(value, id);\n  }\n\n  handleKeyPress = (event) => {\n    const { value, id } = event.target;\n\n    if (event.key === 'Enter') {\n      this.updateTodos(value, id);\n    } else if (event.key === 'Escape') {\n      this.setState({\n        value: this.props.todo.title,\n        isEdit: false,\n      });\n    }\n  }\n\n  updateTodos(value, id) {\n    this.props.onChangeUpdate(value, id);\n\n    this.setState({\n      isEdit: false,\n    });\n  }\n\n  render() {\n    const {\n      todo,\n      onChangeCompleted,\n      onDeleteTodo,\n    } = this.props;\n\n    const { isEdit, value } = this.state;\n\n    return (\n      <li\n        className={classnames({\n          completed: todo.completed,\n          editing: isEdit,\n        })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${todo.id}`}\n            value={todo.id}\n            checked={todo.completed}\n            onChange={onChangeCompleted}\n          />\n          <label\n            htmlFor={`todo-${todo.id}`}\n            onDoubleClick={this.onEdit}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDeleteTodo(todo.id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          id={todo.id}\n          ref={input => input && input.focus()}\n          value={value}\n          onBlur={this.onBlur}\n          onChange={this.onChangeTodo}\n          onKeyUp={this.handleKeyPress}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todo: ShapeTodo.isRequired,\n  onChangeCompleted: PropTypes.func.isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onChangeUpdate: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const ShapeTodo = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\nimport { ShapeTodo } from '../../Shapes/Shapes';\n\nexport class TodoList extends Component {\n  state = {}\n\n  render() {\n    const {\n      todosList,\n      onChangeCompleted,\n      onChangeUpdate,\n      onDeleteTodo,\n    } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {todosList.map(todo => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            onChangeCompleted={onChangeCompleted}\n            onDeleteTodo={onDeleteTodo}\n            onChangeUpdate={onChangeUpdate}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  onChangeCompleted: PropTypes.func.isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onChangeUpdate: PropTypes.func.isRequired,\n  todosList: PropTypes.arrayOf(ShapeTodo).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from '../TodoList/TodoList';\nimport { ShapeTodo } from '../../Shapes/Shapes';\n\nexport class TodoItems extends Component {\n  state = {}\n\n  render() {\n    const {\n      todosList,\n      onChangeCompleted,\n      onChangeUpdate,\n      onDeleteTodo,\n      onDoneAllTodo,\n    } = this.props;\n\n    return (\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onClick={onDoneAllTodo}\n        />\n        <label\n          htmlFor=\"toggle-all\"\n        >\n          Mark all as complete\n        </label>\n\n        <TodoList\n          todosList={todosList}\n          onChangeCompleted={onChangeCompleted}\n          onDeleteTodo={onDeleteTodo}\n          onChangeUpdate={onChangeUpdate}\n        />\n\n      </section>\n    );\n  }\n}\n\nTodoItems.propTypes = {\n  onChangeCompleted: PropTypes.func.isRequired,\n  onDeleteTodo: PropTypes.func.isRequired,\n  onDoneAllTodo: PropTypes.func.isRequired,\n  onChangeUpdate: PropTypes.func.isRequired,\n  todosList: PropTypes.arrayOf(ShapeTodo).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const FilterLink = (props) => {\n  const {\n    url,\n    value,\n  } = props.link;\n\n  const {\n    currentUrl,\n    isActiveLink,\n  } = props;\n\n  return (\n    <li>\n      <a\n        href={url}\n        className={classnames({\n          selected: currentUrl === url,\n        })}\n        onClick={isActiveLink}\n      >\n        {value}\n      </a>\n    </li>\n  );\n};\n\nFilterLink.propTypes = {\n  link: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }).isRequired,\n  currentUrl: PropTypes.string.isRequired,\n  isActiveLink: PropTypes.func.isRequired,\n};\n","export const linksData = [{\n  url: '#/',\n  value: 'All',\n},\n{\n  url: '#/active',\n  value: 'Active',\n},\n{\n  url: '#/completed',\n  value: 'Completed',\n},\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterLink } from '../FilterLink/FilterLink';\nimport { linksData } from './LinksData';\n\nexport class Footer extends Component {\n  state = {\n    currentUrl: '#/',\n    links: linksData,\n  }\n\n  isActiveLink = (event) => {\n    const href = event.target.getAttribute('href');\n\n    this.props.onChangeUrlPath(href);\n    this.setState({\n      currentUrl: href,\n    });\n  }\n\n  render() {\n    const {\n      todoCount,\n      onClearCompletedTodo,\n    } = this.props;\n    const {\n      links,\n      currentUrl,\n    } = this.state;\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${todoCount} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          {links.map(link => (\n            <FilterLink\n              key={link.url}\n              link={link}\n              currentUrl={currentUrl}\n              isActiveLink={this.isActiveLink}\n            />\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={onClearCompletedTodo}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  todoCount: PropTypes.number.isRequired,\n  onClearCompletedTodo: PropTypes.func.isRequired,\n  onChangeUrlPath: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from '../Header/Header';\nimport { TodoItems } from '../TodoItems/TodoItems';\nimport { Footer } from '../Footer/Footer';\nimport { ShapeTodo } from '../../Shapes/Shapes';\n\nexport class TodoApp extends Component {\n  state = {\n    todosList: this.props.todosList,\n    urlPath: '#/',\n  }\n\n  onAddTodo = (todo) => {\n    this.setState(prevState => ({\n      todosList: [...prevState.todosList, todo],\n    }));\n  }\n\n  onDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.filter(todo => todo.id !== id),\n    }));\n  }\n\n  onClearCompletedTodo = () => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.filter(todo => !todo.completed),\n    }));\n  }\n\n  onChangeUrlPath = (href) => {\n    this.setState({\n      urlPath: href,\n    });\n  }\n\n  onChangeCompleted = (event) => {\n    const { value: id } = event.target;\n\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  onChangeUpdate = (value, id) => {\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: value,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  onDoneAllTodo = (event) => {\n    const { checked } = event.target;\n\n    this.setState(prevState => ({\n      todosList: prevState.todosList.map(todo => ({\n        ...todo,\n        completed: checked,\n      })),\n    }));\n  }\n\n  render() {\n    const {\n      todosList,\n      urlPath,\n    } = this.state;\n\n    const {\n      onAddTodo,\n      onChangeCompleted,\n      onDeleteTodo,\n      onClearCompletedTodo,\n      onChangeUrlPath,\n      onDoneAllTodo,\n      onChangeUpdate,\n    } = this;\n\n    const activeTodoQuantity = todosList.filter(todo => !todo.completed).length;\n\n    let renderedList = todosList;\n\n    if (urlPath === '#/active') {\n      renderedList = todosList.filter(todo => !todo.completed);\n    } else if (urlPath === '#/completed') {\n      renderedList = todosList.filter(todo => todo.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          onAddTodo={onAddTodo}\n        />\n\n        <TodoItems\n          todosList={renderedList}\n          onChangeCompleted={onChangeCompleted}\n          onDeleteTodo={onDeleteTodo}\n          onDoneAllTodo={onDoneAllTodo}\n          onChangeUpdate={onChangeUpdate}\n        />\n\n        <Footer\n          todoCount={activeTodoQuantity}\n          onClearCompletedTodo={onClearCompletedTodo}\n          onChangeUrlPath={onChangeUrlPath}\n        />\n      </section>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  todosList: PropTypes.arrayOf(ShapeTodo).isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const todos = [\n  {\n    id: uuidv4(),\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    id: uuidv4(),\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n];\n","import React from 'react';\nimport { TodoApp } from './Components/TodoApp/TodoApp';\nimport { todos } from './api/todos';\n\nexport const App = () => (\n  <TodoApp todosList={todos} />\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}